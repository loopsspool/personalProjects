# TODO: Are any of these needed in this file?
import requests # To retrieve webpages
from bs4 import BeautifulSoup   # To parse webpages
import re   # For filtering what images to download
import urllib   # For downloading those images to my computer
import os   # For downloading those images to my computer
from PIL import Image   # For converting URL image data to PIL Image object 
import openpyxl     # For reading excel workbook
# Must explicitly state this...
from openpyxl import load_workbook
import string # To access letters easily without having to type them myself in an array
import time

# from pokedex_checker import check_pokedex_db_is_current
# from drawn_images import get_drawn_images
# from menu_sprites import get_menu_sprites

from db_utils import populate_db
from spreadsheet_funcs import create_file_checklist_spreadsheet
from bulba_scraping_utils import scrape


################################# TODO: Complete all TODOs here and from all files before running... please ########################
# TODO: Add a check function for files spreadsheet to see if generation is complete. 
# If generation not complete, have an optional detailed function that will output what images are missing, so public can contribute (JSON generated by file creating checklist spreadsheet, pokemon_for_file_checklist.py)
# If generation is complete (add to JSON?), omit adding missing images from parsing gen columns in spreadsheet_funcs

# NOTE: Always check Bulba first, they have higher quality images
# TODO: Maybe occassionally run checks on images saved in mass (say all gen 9) Wikidex most common file size (250x250? 180x180? Def small, Bulba has most gen 8 (all switch?) at 1024x1024) to see if bulba now has those in higher res
# Honestly yeah, write to pokedex JSON all small, non-animated images (bc bulba sux for animation (is this true? check), mostly coming from Wikidex)
# When scraping bulba, search for higher quality ones
# TODO: Also in RN will have to visually change Qmark with ??? (Arceus) or ? (Unown)
    # Probably best to check all forms after RN implemented
# TODO: Write script to find files that have a default sprite saved that shouldnt, like the above
# TODO: Wikidex has 2 images for each back sprite in gen4, see if there are any other games like this and figure out how to get them
# TODO: Wikidex animateds are all gifs, gen9 is webm.... determine if worthwhile to convert and color correct or keep as is. Consider RN and device compatibility
# TODO: Evaluate if I should have forms for form-like transformations: https://bulbapedia.bulbagarden.net/wiki/List_of_Pok%C3%A9mon_with_form_differences#Form-like_transformations
# TODO: Check if there's any female backs missing where male backs are present... May only have visual difference in front and sprite is recycled for back
# TODO: Rename existing pokeball imgs before running (can use existing mapping)

# TODO: Have all functions utilize the start and to go after start denoters
# TODO: This could be put in a text file, So I don't even have to write this after each crash. Each new pokemon would rewrite the line of the file where it picked up
# This is so when I get kicked from the server I only have to write once where to pick up
POKE_NUM_START_FROM = 1
POKE_TO_GO_AFTER_START = 10000
LAST_POKE_NUM = -1
# TODO: Gotta figure out a better way to do this
# try: LAST_POKE_NUM = get_last_poke_num()
# except:
#     populate_db()
#     LAST_POKE_NUM = get_last_poke_num()

if POKE_NUM_START_FROM < 1: POKE_NUM_START_FROM=1
if POKE_NUM_START_FROM > LAST_POKE_NUM: POKE_NUM_START_FROM = LAST_POKE_NUM
if POKE_TO_GO_AFTER_START < 1: POKE_TO_GO_AFTER_START=0
if POKE_NUM_START_FROM + POKE_TO_GO_AFTER_START > LAST_POKE_NUM: POKE_TO_GO_AFTER_START = LAST_POKE_NUM - POKE_NUM_START_FROM
POKE_NUM_END_AT = POKE_NUM_START_FROM + POKE_TO_GO_AFTER_START

def main():
    #check_pokedex_db_is_current(force=False)
    #generate_pokedex_from_spreadsheet()
    #add_missing_images_to_poke()
    #get_game_img_urls()
    #scrape_game_imgs()
    # TODO: Many more menu sprites added, see notes inside menu_sprites file
    #get_menu_sprites()

    # TODO: Gotta figure out dependencies between pop_db and create_checklist running... its ridiculous
    #populate_db()
    #create_file_checklist_spreadsheet()
    scrape()

    
if __name__ == "__main__":
    main()